Mod1
Function RangetoHTML(rng As Range)
' Changed by Ron de Bruin 28-Oct-2006
' Working in Office 2000-2013
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook

    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to paste the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        .Cells(1).PasteSpecial Paste:=8
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        .Cells(1).Select
        Application.CutCopyMode = False
        On Error Resume Next
        .DrawingObjects.Visible = True
        .DrawingObjects.Delete
        On Error GoTo 0
    End With

    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    RangetoHTML = ts.readall
    ts.Close
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
                          "align=left x:publishsource=")

    'Close TempWB
    TempWB.Close savechanges:=False

    'Delete the htm file we used in this function
    Kill TempFile

    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
End Function


Mod2
Sub ClearData()
'
' ClearData Macro
' Will clear records from Columns A to B
    Range("A2:B2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
End Sub
Sub CopyValues()
'
' CopyValues Macro
' Copy and Paste Special Values
    Range("A2:B2").Select
    ActiveWindow.SmallScroll Down:=318
    Range("A2:B320").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=True, Transpose:=False
    Application.CutCopyMode = False
    Range("A4").Select
End Sub
Sub FillRows()
'
' FillRows Macro
' Fill Rows with Data
'
    Range("A2").Select
    ActiveCell.FormulaR1C1 = "=MID('Journal Extract Template'!R[12]C9,1,1)"
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "=MID('Journal Extract Template'!R[12]C9,1,1)"
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "=MID('Journal Extract Template'!R[12]C9,3,6)"
    Range("A2:B2").Select
    Selection.AutoFill Destination:=Range("A2:B320"), Type:=xlFillDefault
    Range("A2:B320").Select

End Sub
Sub RefreshPivot()
'
' RefreshPivot Macro
    Range("D19").Select
    ActiveSheet.PivotTables("PivotTable2").PivotCache.Refresh
End Sub

Mod3
Sub reset()
Static SchedSave
    If SchedSave <> 0 Then
    Application.OnTime SchedSave, "SaveWork", , False
    End If
    SchedSave = Now + TimeValue("00:59:00") ' 59 minutes
    Application.OnTime SchedSave, "SaveWork", , True
End Sub
Sub SaveWork()
ThisWorkbook.Save
'before closing the tracker send an email to the team so exemption will not be missed
ThisWorkbook.Close
End Sub

Mod4
Sub OMTest()

Dim HostExplorer As Object
Dim MyHost As Object
Dim Rc, i As Integer
Dim jobName, endPrompt As String

Dim iPSUpdateTimeout

On Error GoTo GenericErrorHandler

Set HostExplorer = CreateObject("HostExplorer") ' Initialize HostExplorer Object
Set MyHost = HostExplorer.HostFromProfile("Default 3270") ' Set object for the desired session
If MyHost Is Nothing Then GoTo NoSession

iPSUpdateTimeout = 60       ' WaitPSUpdated timeout set to 60 seconds

'Validation
If MyHost.TextRC(3, 3, 6) <> "Cmdkey" Then
  MsgBox "Please go to TPX SESSION MANAGER MENU", vbCritical, "Mainframe"
  Exit Sub
End If

'GoTo ISPF
Rc = MyHost.Keys("/td")
If Rc <> 0 Then GoTo OnKeyboardError
MyHost.RunCmd ("PF12")
Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
Rc = MyHost.Keys("m90jhr")
If Rc <> 0 Then GoTo OnKeyboardError
MyHost.RunCmd ("Enter")
Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
Rc = MyHost.Keys("Noside12")
If Rc <> 0 Then GoTo OnKeyboardError
MyHost.RunCmd ("Enter")
Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
Rc = MyHost.Keys("spf")
If Rc <> 0 Then GoTo OnKeyboardError
MyHost.RunCmd ("Enter")
Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
Rc = MyHost.Keys("P")
If Rc <> 0 Then GoTo OnKeyboardError
MyHost.RunCmd ("Enter")

i = 4
jobName = Trim(Range("A" & i).Value)

Do While jobName <> ""
    
        Do While jobName <> ""
            
            If Rc <> 0 Then GoTo OnKeyboardError
            MyHost.RunCmd ("Home")
            If Rc <> 0 Then GoTo OnKeyboardError
            MyHost.RunCmd ("Erase-EOF")
            'Jobname
            Rc = MyHost.Keys(jobName)
            'Look for CPU time
            MyHost.RunCmd ("Enter")
            If MyHost.TextRC(3, 19, 3) = "REQ" Then
                i = i + 1
                jobName = Trim(Range("A" & i).Value)
                Exit Do
            End If
            Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
            If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
            MyHost.RunCmd ("Pf11")
            Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
            If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
            MyHost.RunCmd ("Pf11")
            Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
            If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
            MyHost.RunCmd ("Pf11")
            Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
            If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
            Range("H" & i).Value = MyHost.TextRC(5, 52, 7)
            MyHost.RunCmd ("Pf3")
            Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
            If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
            i = i + 1
            jobName = Trim(Range("A" & i).Value)
    
        Loop
    
    If Rc <> 0 Then GoTo OnKeyboardError
    MyHost.RunCmd ("Home")
    If Rc <> 0 Then GoTo OnKeyboardError
    MyHost.RunCmd ("Erase-EOF")
    'Jobname
    Rc = MyHost.Keys(jobName)
    'Look for CPU time
    MyHost.RunCmd ("Enter")
    Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
    If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
    MyHost.RunCmd ("Pf11")
    Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
    If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
    MyHost.RunCmd ("Pf11")
    Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
    If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
    MyHost.RunCmd ("Pf11")
    Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
    If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
    Range("H" & i).Value = MyHost.TextRC(5, 52, 7)
    MyHost.RunCmd ("Pf3")
    Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
    If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
    i = i + 1
    jobName = Trim(Range("A" & i).Value)

Loop

endPrompt = MsgBox("Done!", vbOKOnly, "OM")
If endPrompt = vbOK Then
    Exit Sub
End If

'Terminator
Rc = MyHost.WaitPSUpdated(iPSUpdateTimeout, True)
If Rc <> 0 Then GoTo OnWaitPSUpdatedTimeout
Rc = MyHost.WaitIdle(5)
Exit Sub
    
  
  '-------------------- Runtime Error Handlers --------------------
GenericErrorHandler:
  MsgBox "Error " & Err & " : """ & error(Err) & """ has occurred on line " & Erl - 1 & "." & Chr(10) & "Unable to continue macro execution.", 16, "HostExplorer Basic Macro Error"
  Exit Sub

NoSession:
  MsgBox "Profile ""Default 3270"" is not running." & Chr(10) & "Unable to execute macro.", 16, "HostExplorer Macro Error"
  Exit Sub

OnWaitPSUpdatedTimeout:
  MsgBox "Timeout occured waiting for host to update screen." & Chr(10) & "Unable to continue macro execution.", 16, "HostExplorer Basic Macro Error"
  Exit Sub

OnKeyboardError:
  MsgBox "Unable to type string on host screen." & Chr(10) & "Unable to continue macro execution.", 16, "HostExplorer Basic Macro Error"
  Exit Sub


End Sub

Mod5
Sub Macro1()
'
' Macro1 Macro
'

'
    Range("C4").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft, xlEdgeTop, xlEdgeBottom, xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub Macro2()
'
' Macro2 Macro
'

'
    Selection.Copy
    Range("B4").Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "Ticket No."
    Range("C5").Select
    ActiveCell.FormulaR1C1 = "<OM NUMBER>"
    Range("C5").Select
    ActiveCell.FormulaR1C1 = "<OM NUMBER>"
    Range("C5").Select
    ActiveCell.FormulaR1C1 = "<OM NUMBER>"
    Range("C5").Select
    ActiveCell.FormulaR1C1 = "<OM NUMBER>"
    Range("C4").Select
End Sub
Sub Macro3()
'
' Macro3 Macro
'

'
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("C24").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C26").Select
End Sub
Sub Macro4()
'
' Macro4 Macro
'

'
    Range("C4").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub

